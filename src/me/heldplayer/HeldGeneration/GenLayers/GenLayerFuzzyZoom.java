package me.heldplayer.HeldGeneration.GenLayers;

public class GenLayerFuzzyZoom extends GenLayer {
	public GenLayerFuzzyZoom(long seed, GenLayer parent) {
		super(seed);
		super.parent = parent;
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be
	 * interpreted as temperatures, rainfall
	 * amounts, or biomeList[] indices based on the particular GenLayer
	 * subclass.
	 */
	@Override
	public int[] getInts(int startX, int startZ, int sizeX, int sizeZ) {
		int var5 = startX >> 1;
		int var6 = startZ >> 1;
		int var7 = (sizeX >> 1) + 3;
		int var8 = (sizeZ >> 1) + 3;
		int[] var9 = this.parent.getInts(var5, var6, var7, var8);
		int[] var10 = IntCache.getIntCache(var7 * 2 * var8 * 2);
		int var11 = var7 << 1;
		int var13;

		for (int var12 = 0; var12 < var8 - 1; ++var12) {
			var13 = var12 << 1;
			int var14 = var13 * var11;
			int var15 = var9[0 + (var12 + 0) * var7];
			int var16 = var9[0 + (var12 + 1) * var7];

			for (int var17 = 0; var17 < var7 - 1; ++var17) {
				initChunkSeed((var17 + var5 << 1), (var12 + var6 << 1));
				int var18 = var9[var17 + 1 + (var12 + 0) * var7];
				int var19 = var9[var17 + 1 + (var12 + 1) * var7];
				var10[var14] = var15;
				var10[var14++ + var11] = this.choose(var15, var16);
				var10[var14] = this.choose(var15, var18);
				var10[var14++ + var11] = this.choose(var15, var18, var16, var19);
				var15 = var18;
				var16 = var19;
			}
		}

		int[] var20 = IntCache.getIntCache(sizeX * sizeZ);

		for (var13 = 0; var13 < sizeZ; ++var13) {
			System.arraycopy(var10, (var13 + (startZ & 1)) * (var7 << 1) + (startX & 1), var20, var13 * sizeX, sizeX);
		}

		return var20;
	}

	/**
	 * randomly choose between the two args
	 */
	protected int choose(int arg1, int arg2) {
		return nextInt(2) == 0 ? arg1 : arg2;
	}

	/**
	 * randomly choose between the four args
	 */
	protected int choose(int arg1, int arg2, int arg3, int arg4) {
		int var5 = nextInt(4);
		return var5 == 0 ? arg1 : (var5 == 1 ? arg2 : (var5 == 2 ? arg3 : arg4));
	}
}